"0","cld_df <- as.data.frame(cld_result) %>%"
"0","  dplyr::select(trat, .group) %>% "
"0","  rename(label = .group)      "
"0",""
"0","pos_x_letras <- max(rep_beta$tempo)"
"0",""
"0","# Criar um dataframe de nova_data para prever o Y no tempo máximo para cada 'trat'"
"0",""
"0","df_para_prever_letras <- data.frame("
"0","  trat = levels(rep_beta$trat),"
"0","  tempo = pos_x_letras # Usa o tempo máximo para todas as previsões"
"0",")"
"0",""
"0","# Fazer a previsão na escala reescalada e depois transformar"
"0","previsoes_y_letras <- predict(modbeta, newdata = df_para_prever_letras, type = ""response"")"
"0",""
"0","# Transformar previsões para a escala ORIGINAL (-100 a 100)"
"0","previsoes_y_letras_original <- ((previsoes_y_letras - epsilon) / (1 - 2 * epsilon)) * 200 - 100"
"0",""
"0","# Adicionar as previsões ao dataframe"
"0","df_para_prever_letras$y_pos_original <- previsoes_y_letras_original"
"0",""
"0","# Ajustar corretamente a altura das letras"
"0",""
"0","df_para_prever_letras$y_pos_original[1] <- -40"
"0","df_para_prever_letras$y_pos_original[2] <- 1"
"0","df_para_prever_letras$y_pos_original[3] <- 11.20000"
"0","df_para_prever_letras$y_pos_original[4] <- 20"
"0","df_para_prever_letras$y_pos_original[5] <- -30"
"0",""
"0","# Unir as letras CLD com as posições Y previstas"
"0","plot_labels_cld <- left_join(df_para_prever_letras, cld_df, by = ""trat"") %>%"
"0","  mutate(y_pos_final = y_pos_original + 5)"
"0",""
