{"title":"Efeitos no Índice de Repelência","markdown":{"yaml":{"title":"Efeitos no Índice de Repelência","editor":"visual"},"headingText":"Repelência fenois - com base no cálculo de indíce","containsRefs":false,"markdown":"\n\n\n**Índice de repelência** é uma medida utilizada para avaliar a eficácia de um tratamento ou substância em repelir insetos ou outros organismos. Ele é geralmente aplicado em estudos de controle de pragas ou experimentos ecológicos.\n\n#### Fórmula para calcular o Índice de Repelência (IR):\n\nA fórmula mais comum para calcular o índice de repelência é baseada na comparação entre o número de indivíduos (geralmente insetos) encontrados nas áreas tratadas e nas áreas não tratadas.\n\nA fórmula clássica para calcular o índice de repelência (IR) é:\n\n![](images/Captura_de_tela_2025-07-02_081237-removebg-preview.png){fig-align=\"center\"}\n\nOnde:\n\n**N cont**: número de insetos encontrados na área não tratada (controle).\n\n**N trat**: número de insetos encontrados na área tratada.\n\n#### Interpretação do Índice de Repelência (IR):\n\n**IR = 0**: Não há repelência, ou seja, o número de insetos nas áreas tratadas é igual ao das áreas de controle.\n\n**IR \\> 0**: O tratamento tem algum grau de repelência, pois o número de insetos na área tratada é menor que na área de controle.\n\n**IR \\< 0**: O tratamento pode ter um efeito atraente, ou seja, há mais insetos nas áreas tratadas do que nas áreas de controle.\n\n## Baixando os dados\n\n```{r, echo=FALSE, results='hide', warning=FALSE, message=FALSE}\nrep <- read.csv(\"indice_fip606.csv\", header = T, stringsAsFactors = T)\n\n# Analisar as variáveis do modelo\nif(!require(dplyr)) install.packages(\"dplyr\") \nlibrary(dplyr)    \n\nglimpse(rep)\n\n# Substituindo vírgulas por pontos em rep$indice\n\nrep$indice <- as.numeric(gsub(\",\", \".\", rep$indice))\n\nglimpse(rep)\n```\n\n*A adequação da pontuação utilizada nos dados é importante para o reconhecimento dos tipos das mesmas pelo programa.*\n\n## Visualizando os dados\n\n```{r, echo=FALSE, eval=TRUE}\nif(!require(ggplot2)) install.packages(\"ggplot2\") \nlibrary(ggplot2)\n\n# Definir a paleta de cores personalizada para os tratamentos\npaleta_cores <- c(\n  \"NT\" = \"#D0E789\",\n  \"C\"  = \"#50A34B\",\n  \"E\"  = \"#3320A2\",\n  \"G\"  = \"#8D0987\",\n  \"T\"  = \"darkorange\"\n)\n\n# Criar o gráfico com a paleta de cores\nggplot(rep, aes(x = tempo, y = indice, color = trat)) +\n  geom_jitter(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = FALSE) + # Linhas de regressão para cada tratamento\n  labs(title = \"Índice por Tempo e Tratamento\",\n       x = \"Tempo\",\n       y = \"Índice\",\n       color = \"Tratamento\") +\n  theme_minimal() +\n  scale_color_manual(values = paleta_cores)  # Aplique a paleta de cores personalizada\n\n```\n\n*Devido a natureza dos dados, e a nossa intenção de análise dos efeitos do tempo e dos tratamentos sobre o índice de repelencia do estudo, organizamos um modelo de Análise de Covariância (ANCOVA).*\n\n## Criando o modelo estatístico\n\n```{r, echo=FALSE, eval=TRUE}\n# Testando modelo com interação\n\nmod <- lm(indice ~ tempo + trat + tempo * trat, data = rep)\n\nsummary(mod)\n\n# As interações não foram significativas, vamos testar o modelo sem interações\n\nmod <- lm(indice ~ tempo + trat, data = rep)\n\nsummary(mod)\n```\n\n*O modelo sem interações se mostrou o ideal. O que significa que as variaveis de tempo e tratamento não apresentam interações significativas entre si.*\n\n## Avaliação de pressupostos\n\n```{r, echo=FALSE, eval=TRUE}\n# Normalidade de resíduos\n\nif(!require(nortest)) install.packages(\"nortest\") \nlibrary(nortest)\n\nplot(residuals(mod))\n\nlillie.test(residuals(mod)) # Não atende pressupostos\n\n# Homocedastiticade\n\nbartlett.test(indice ~ tempo, data = rep) # Atende pressupostos\nbartlett.test(indice ~ trat, data = rep) # Não atende pressupostos\n```\n\n*Como os resultados dos testes apontam que os dados não seguem os pressupostos estabelecidos para uma Análise de Covariância (normalidade de resíduos e homogeneidade de variâncias), optamos por seguir utilizando uma alternativa não paramétrica da ANCOVA.*\n\n## Adaptando para modelo não paramétrico\n\n```{r, echo=FALSE, eval=TRUE}\n# Teste com glm familia beta (betareg)\n# Carregar pacotes\nif(!require(betareg)) install.packages(\"betareg\") \nlibrary(betareg)\nif(!require(car)) install.packages(\"car\") \nlibrary(car)\n\n# Dados separados para adaptação\nrep_beta <- rep\n# Garantir que o índice esteja estritamente entre -100 e 100\nrep_beta$indice <- pmax(-99.99, pmin(99.99, rep_beta$indice))\n\n\n# Reescalar a variável resposta 'indice' para o intervalo (0, 1)\n\n# Essa variável aparece no intervalo de -100 a 100, porém, a análise de Regressão Beta necessita de valores no espaço de 0 a 1.\n\n# Então, para a análise, utilizaremos uma adaptação, onde faremos a proporção dos valores de -100 a 100 para valores representados entre 0 e 1.\n\nepsilon <- 0.0001 # Um valor pequeno para evitar 0 e 1 exatos\nrep_beta <- rep_beta %>%\n  mutate(indice_rescalado = (indice - (-100)) / (100 - (-100))) %>% # Mapeia para [0,1]\n  mutate(indice_rescalado = (indice_rescalado * (1 - 2 * epsilon)) + epsilon) \n\nprint(summary(rep_beta$indice_rescalado))\n\nprint(head(rep_beta))\n\n\n# Ajustar o Modelo Beta Regression sem interação\n# O 'link = \"logit\"' é o padrão e geralmente a melhor escolha para dados Beta.\nmodbeta <- betareg(indice_rescalado ~ tempo + trat, data = rep_beta)\n\nsummary(modbeta)\n\nAnova(modbeta, type = 2)\n\n\n```\n\n*A distribuição beta, do modelo de regressão linear generalizada, é o que melhor consegue descrever os dados. Isso está relacionado com o fato de ser eficaz para grupos de dados com limites inferior e superior (geralmente entre 0 e 1).* *Conseguimos utilizar esse modelo após transformarmos os nossos dados para se adequarem de forma proporcional nesse modelo.*\n\n## Teste post-hoc\n\n```{r, echo=FALSE, eval=TRUE}\nif(!require(multcomp)) install.packages(\"multcomp\") \nlibrary(multcomp)\nif(!require(emmeans)) install.packages(\"emmeans\") \nlibrary(emmeans)\n\n# Calcular as médias marginais estimadas para cada tratamento, ajustadas em relação ao tempo\nem_means_trat <- emmeans(modbeta, ~ trat, type = \"response\")\nprint(em_means_trat)\n\n# Realizar as comparações post-hoc com ajuste de Tukey\npairs(em_means_trat, adjust = \"tukey\")\n\n\ncld_result <- cld(em_means_trat, adjust = \"tukey\", Letters = LETTERS)\nmessage(\"\\n--- Resultado do CLD (letras de agrupamento) ---\")\nprint(cld_result)\n```\n\n## Adaptando as letras do teste post-hoc para utilizá-las no gráfico\n\n```{r, echo=FALSE, eval=TRUE}\ncld_df <- as.data.frame(cld_result) %>%\n  dplyr::select(trat, .group) %>% \n  rename(label = .group)      \n\npos_x_letras <- max(rep_beta$tempo)\n\n# Criar um dataframe de nova_data para prever o Y no tempo máximo para cada 'trat'\n\ndf_para_prever_letras <- data.frame(\n  trat = levels(rep_beta$trat),\n  tempo = pos_x_letras # Usa o tempo máximo para todas as previsões\n)\n\n# Fazer a previsão na escala reescalada e depois transformar\nprevisoes_y_letras <- predict(modbeta, newdata = df_para_prever_letras, type = \"response\")\n\n# Transformar previsões para a escala ORIGINAL (-100 a 100)\nprevisoes_y_letras_original <- ((previsoes_y_letras - epsilon) / (1 - 2 * epsilon)) * 200 - 100\n\n# Adicionar as previsões ao dataframe\ndf_para_prever_letras$y_pos_original <- previsoes_y_letras_original\n\n# Ajustar corretamente a altura das letras\n\ndf_para_prever_letras$y_pos_original[1] <- -40\ndf_para_prever_letras$y_pos_original[2] <- 1\ndf_para_prever_letras$y_pos_original[3] <- 11.20000\ndf_para_prever_letras$y_pos_original[4] <- 20\ndf_para_prever_letras$y_pos_original[5] <- -30\n\n# Unir as letras CLD com as posições Y previstas\nplot_labels_cld <- left_join(df_para_prever_letras, cld_df, by = \"trat\") %>%\n  mutate(y_pos_final = y_pos_original + 5)\n\n```\n\n## Geração do gráfico\n\n```{r, echo=FALSE, eval=TRUE}\n# Definir a paleta de cores personalizada para os tratamentos\npaleta_cores <- c(\n  \"NT\" = \"#D0E789\",\n  \"C\"  = \"#50A34B\",\n  \"E\"  = \"#3320A2\",\n  \"G\"  = \"#8D0987\",\n  \"T\"  = \"darkorange\"\n)\n\n# Criar o gráfico com a paleta de cores personalizada\nggplot(rep_beta, aes(x = tempo, y = indice, colour = trat)) +\n  geom_jitter(width = 0.1, height = 0.5, alpha = 0.6) +\n  geom_smooth(formula = y ~ x, se = FALSE, size = 0.8) +\n  geom_text(data = plot_labels_cld,\n            aes(x = tempo, y = y_pos_final, label = label, color = trat),\n            size = 3,\n            hjust = -0.1,  # Ajuste para a letra ficar um pouco à direita do final da linha\n            vjust = 0.5,  # Ajusta o alinhamento vertical da letra\n            show.legend = FALSE) +  # Não mostrar as letras na legenda\n  labs(\n    title = \"Índice Original por Tempo e Tratamento com CLD\",\n    x = \"Tempo\",\n    y = \"Índice Original (-100 a 100)\",\n    color = \"Tratamento\"\n  ) +\n  scale_y_continuous(limits = c(-100, 100 + 10)) +\n  scale_x_continuous(limits = c(min(rep_beta$tempo), max(rep_beta$tempo) + 1)) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  scale_color_manual(values = paleta_cores)  # Aplique a paleta de cores personalizada\n\n```\n\n*Ao visulalizar gráfico, é possível concluir que o tratamento \"T\" pode ter um efeito de repelência crescente ao longo do tempo, enquanto os tratamentos \"C\" e \"E\" parecem ter pouco ou nenhum efeito de repelência significativo. O tratamento \"G\" se comporta de forma intermediária. A análise sugere que o tempo pode ter um papel importante na eficácia do tratamento em repelir os insetos.*\n","srcMarkdownNoYaml":"\n\n# Repelência fenois - com base no cálculo de indíce\n\n**Índice de repelência** é uma medida utilizada para avaliar a eficácia de um tratamento ou substância em repelir insetos ou outros organismos. Ele é geralmente aplicado em estudos de controle de pragas ou experimentos ecológicos.\n\n#### Fórmula para calcular o Índice de Repelência (IR):\n\nA fórmula mais comum para calcular o índice de repelência é baseada na comparação entre o número de indivíduos (geralmente insetos) encontrados nas áreas tratadas e nas áreas não tratadas.\n\nA fórmula clássica para calcular o índice de repelência (IR) é:\n\n![](images/Captura_de_tela_2025-07-02_081237-removebg-preview.png){fig-align=\"center\"}\n\nOnde:\n\n**N cont**: número de insetos encontrados na área não tratada (controle).\n\n**N trat**: número de insetos encontrados na área tratada.\n\n#### Interpretação do Índice de Repelência (IR):\n\n**IR = 0**: Não há repelência, ou seja, o número de insetos nas áreas tratadas é igual ao das áreas de controle.\n\n**IR \\> 0**: O tratamento tem algum grau de repelência, pois o número de insetos na área tratada é menor que na área de controle.\n\n**IR \\< 0**: O tratamento pode ter um efeito atraente, ou seja, há mais insetos nas áreas tratadas do que nas áreas de controle.\n\n## Baixando os dados\n\n```{r, echo=FALSE, results='hide', warning=FALSE, message=FALSE}\nrep <- read.csv(\"indice_fip606.csv\", header = T, stringsAsFactors = T)\n\n# Analisar as variáveis do modelo\nif(!require(dplyr)) install.packages(\"dplyr\") \nlibrary(dplyr)    \n\nglimpse(rep)\n\n# Substituindo vírgulas por pontos em rep$indice\n\nrep$indice <- as.numeric(gsub(\",\", \".\", rep$indice))\n\nglimpse(rep)\n```\n\n*A adequação da pontuação utilizada nos dados é importante para o reconhecimento dos tipos das mesmas pelo programa.*\n\n## Visualizando os dados\n\n```{r, echo=FALSE, eval=TRUE}\nif(!require(ggplot2)) install.packages(\"ggplot2\") \nlibrary(ggplot2)\n\n# Definir a paleta de cores personalizada para os tratamentos\npaleta_cores <- c(\n  \"NT\" = \"#D0E789\",\n  \"C\"  = \"#50A34B\",\n  \"E\"  = \"#3320A2\",\n  \"G\"  = \"#8D0987\",\n  \"T\"  = \"darkorange\"\n)\n\n# Criar o gráfico com a paleta de cores\nggplot(rep, aes(x = tempo, y = indice, color = trat)) +\n  geom_jitter(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = FALSE) + # Linhas de regressão para cada tratamento\n  labs(title = \"Índice por Tempo e Tratamento\",\n       x = \"Tempo\",\n       y = \"Índice\",\n       color = \"Tratamento\") +\n  theme_minimal() +\n  scale_color_manual(values = paleta_cores)  # Aplique a paleta de cores personalizada\n\n```\n\n*Devido a natureza dos dados, e a nossa intenção de análise dos efeitos do tempo e dos tratamentos sobre o índice de repelencia do estudo, organizamos um modelo de Análise de Covariância (ANCOVA).*\n\n## Criando o modelo estatístico\n\n```{r, echo=FALSE, eval=TRUE}\n# Testando modelo com interação\n\nmod <- lm(indice ~ tempo + trat + tempo * trat, data = rep)\n\nsummary(mod)\n\n# As interações não foram significativas, vamos testar o modelo sem interações\n\nmod <- lm(indice ~ tempo + trat, data = rep)\n\nsummary(mod)\n```\n\n*O modelo sem interações se mostrou o ideal. O que significa que as variaveis de tempo e tratamento não apresentam interações significativas entre si.*\n\n## Avaliação de pressupostos\n\n```{r, echo=FALSE, eval=TRUE}\n# Normalidade de resíduos\n\nif(!require(nortest)) install.packages(\"nortest\") \nlibrary(nortest)\n\nplot(residuals(mod))\n\nlillie.test(residuals(mod)) # Não atende pressupostos\n\n# Homocedastiticade\n\nbartlett.test(indice ~ tempo, data = rep) # Atende pressupostos\nbartlett.test(indice ~ trat, data = rep) # Não atende pressupostos\n```\n\n*Como os resultados dos testes apontam que os dados não seguem os pressupostos estabelecidos para uma Análise de Covariância (normalidade de resíduos e homogeneidade de variâncias), optamos por seguir utilizando uma alternativa não paramétrica da ANCOVA.*\n\n## Adaptando para modelo não paramétrico\n\n```{r, echo=FALSE, eval=TRUE}\n# Teste com glm familia beta (betareg)\n# Carregar pacotes\nif(!require(betareg)) install.packages(\"betareg\") \nlibrary(betareg)\nif(!require(car)) install.packages(\"car\") \nlibrary(car)\n\n# Dados separados para adaptação\nrep_beta <- rep\n# Garantir que o índice esteja estritamente entre -100 e 100\nrep_beta$indice <- pmax(-99.99, pmin(99.99, rep_beta$indice))\n\n\n# Reescalar a variável resposta 'indice' para o intervalo (0, 1)\n\n# Essa variável aparece no intervalo de -100 a 100, porém, a análise de Regressão Beta necessita de valores no espaço de 0 a 1.\n\n# Então, para a análise, utilizaremos uma adaptação, onde faremos a proporção dos valores de -100 a 100 para valores representados entre 0 e 1.\n\nepsilon <- 0.0001 # Um valor pequeno para evitar 0 e 1 exatos\nrep_beta <- rep_beta %>%\n  mutate(indice_rescalado = (indice - (-100)) / (100 - (-100))) %>% # Mapeia para [0,1]\n  mutate(indice_rescalado = (indice_rescalado * (1 - 2 * epsilon)) + epsilon) \n\nprint(summary(rep_beta$indice_rescalado))\n\nprint(head(rep_beta))\n\n\n# Ajustar o Modelo Beta Regression sem interação\n# O 'link = \"logit\"' é o padrão e geralmente a melhor escolha para dados Beta.\nmodbeta <- betareg(indice_rescalado ~ tempo + trat, data = rep_beta)\n\nsummary(modbeta)\n\nAnova(modbeta, type = 2)\n\n\n```\n\n*A distribuição beta, do modelo de regressão linear generalizada, é o que melhor consegue descrever os dados. Isso está relacionado com o fato de ser eficaz para grupos de dados com limites inferior e superior (geralmente entre 0 e 1).* *Conseguimos utilizar esse modelo após transformarmos os nossos dados para se adequarem de forma proporcional nesse modelo.*\n\n## Teste post-hoc\n\n```{r, echo=FALSE, eval=TRUE}\nif(!require(multcomp)) install.packages(\"multcomp\") \nlibrary(multcomp)\nif(!require(emmeans)) install.packages(\"emmeans\") \nlibrary(emmeans)\n\n# Calcular as médias marginais estimadas para cada tratamento, ajustadas em relação ao tempo\nem_means_trat <- emmeans(modbeta, ~ trat, type = \"response\")\nprint(em_means_trat)\n\n# Realizar as comparações post-hoc com ajuste de Tukey\npairs(em_means_trat, adjust = \"tukey\")\n\n\ncld_result <- cld(em_means_trat, adjust = \"tukey\", Letters = LETTERS)\nmessage(\"\\n--- Resultado do CLD (letras de agrupamento) ---\")\nprint(cld_result)\n```\n\n## Adaptando as letras do teste post-hoc para utilizá-las no gráfico\n\n```{r, echo=FALSE, eval=TRUE}\ncld_df <- as.data.frame(cld_result) %>%\n  dplyr::select(trat, .group) %>% \n  rename(label = .group)      \n\npos_x_letras <- max(rep_beta$tempo)\n\n# Criar um dataframe de nova_data para prever o Y no tempo máximo para cada 'trat'\n\ndf_para_prever_letras <- data.frame(\n  trat = levels(rep_beta$trat),\n  tempo = pos_x_letras # Usa o tempo máximo para todas as previsões\n)\n\n# Fazer a previsão na escala reescalada e depois transformar\nprevisoes_y_letras <- predict(modbeta, newdata = df_para_prever_letras, type = \"response\")\n\n# Transformar previsões para a escala ORIGINAL (-100 a 100)\nprevisoes_y_letras_original <- ((previsoes_y_letras - epsilon) / (1 - 2 * epsilon)) * 200 - 100\n\n# Adicionar as previsões ao dataframe\ndf_para_prever_letras$y_pos_original <- previsoes_y_letras_original\n\n# Ajustar corretamente a altura das letras\n\ndf_para_prever_letras$y_pos_original[1] <- -40\ndf_para_prever_letras$y_pos_original[2] <- 1\ndf_para_prever_letras$y_pos_original[3] <- 11.20000\ndf_para_prever_letras$y_pos_original[4] <- 20\ndf_para_prever_letras$y_pos_original[5] <- -30\n\n# Unir as letras CLD com as posições Y previstas\nplot_labels_cld <- left_join(df_para_prever_letras, cld_df, by = \"trat\") %>%\n  mutate(y_pos_final = y_pos_original + 5)\n\n```\n\n## Geração do gráfico\n\n```{r, echo=FALSE, eval=TRUE}\n# Definir a paleta de cores personalizada para os tratamentos\npaleta_cores <- c(\n  \"NT\" = \"#D0E789\",\n  \"C\"  = \"#50A34B\",\n  \"E\"  = \"#3320A2\",\n  \"G\"  = \"#8D0987\",\n  \"T\"  = \"darkorange\"\n)\n\n# Criar o gráfico com a paleta de cores personalizada\nggplot(rep_beta, aes(x = tempo, y = indice, colour = trat)) +\n  geom_jitter(width = 0.1, height = 0.5, alpha = 0.6) +\n  geom_smooth(formula = y ~ x, se = FALSE, size = 0.8) +\n  geom_text(data = plot_labels_cld,\n            aes(x = tempo, y = y_pos_final, label = label, color = trat),\n            size = 3,\n            hjust = -0.1,  # Ajuste para a letra ficar um pouco à direita do final da linha\n            vjust = 0.5,  # Ajusta o alinhamento vertical da letra\n            show.legend = FALSE) +  # Não mostrar as letras na legenda\n  labs(\n    title = \"Índice Original por Tempo e Tratamento com CLD\",\n    x = \"Tempo\",\n    y = \"Índice Original (-100 a 100)\",\n    color = \"Tratamento\"\n  ) +\n  scale_y_continuous(limits = c(-100, 100 + 10)) +\n  scale_x_continuous(limits = c(min(rep_beta$tempo), max(rep_beta$tempo) + 1)) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  scale_color_manual(values = paleta_cores)  # Aplique a paleta de cores personalizada\n\n```\n\n*Ao visulalizar gráfico, é possível concluir que o tratamento \"T\" pode ter um efeito de repelência crescente ao longo do tempo, enquanto os tratamentos \"C\" e \"E\" parecem ter pouco ou nenhum efeito de repelência significativo. O tratamento \"G\" se comporta de forma intermediária. A análise sugere que o tempo pode ter um papel importante na eficácia do tratamento em repelir os insetos.*\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"center","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css","https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"],"toc":true,"toc-depth":2,"output-file":"repelencia.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":{"light":"minty","dark":"cyborg"},"page-layout":"full","mainfont":"Roboto","title":"Efeitos no Índice de Repelência","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}